{"version":3,"sources":["App.js","Assets/troll.png","Components/Navigation.js","Pages/Gallery.js","Pages/About.js","Pages/View.js","Pages/NotFound.js","Assets/eyes.png","Assets/shades.png","Assets/doge.png","Assets/joint.png","Assets/sample-1.png","Assets/sample-2.jpg","Assets/sample-3.jpg","Assets/sample-4.png","reportWebVitals.js","index.js"],"names":["l1Provider","l1Signer","StyledLink","styled","Link","Navigation","useState","navIsActive","setNavIsActive","active","transparent","style","background","Brand","Item","renderAs","to","src","troll","alt","Burger","onClick","Menu","Container","Gallery","contract","walletDetected","assets","setAssets","totalSupply","setTotalSupply","load","a","console","log","totalSupplyNum","toNumber","Array","map","_","i","id","tokenURI","item","newItem","prev","useEffect","className","About","StyledSVG","ReactSVG","Title","h2","ipfsClient","require","title","setTitle","description","setDescription","svg","setSvg","useParams","sanitize","url","cidV0","replace","cidV1","CID","toV1","metadataUri","santizedMetadataUri","fetch","res","json","metadata","santizedSvgUri","image","name","undefined","wrapper","NotFound","fabric","ipfs","host","port","protocol","window","ethereum","enable","then","ethers","providers","Web3Provider","getSigner","getDefaultProvider","err","abi","StyledSketchField","SketchField","StyledTextBox","input","StyledButton","button","MemeButton","ThumbImg","img","App","imageCID","setImageCID","metadataCID","setMetadataCID","Tools","Select","tool","setTool","mintStatus","setMintStatus","mintModal","setMintModal","loadModal","setLoadModal","saveModal","setSaveModal","isValidL1","setIsValidL1","Contract","checkNetworks","getNetwork","network","includes","chainId","_sketch","useRef","text","current","addText","remove","removeSelected","toggleLoadModal","axios","get","responseType","response","reader","FileReader","readAsDataURL","data","onload","Image","fromURL","result","oImg","scaleToWidth","setBackgroundFromDataUrl","toDataURL","stretched","originX","originY","toggleSaveModal","save","actuallySave","onloadend","fileContents","add","ipfsImg","ipfsMetadata","canvas","blob","mintNFT","getAddress","address","mint","tx","wait","path","exact","addImg","doge","eyes","shades","joint","Pencil","width","height","lineColor","lineWidth","ref","c","aria-label","sample1","sample2","sample3","sample4","value","placeholder","onChange","e","currentTarget","href","target","View","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d673ba3c.chunk.js","sourcesContent":["import './App.css';\n\nimport React, { useRef, useState, useEffect } from \"react\";\n\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport {SketchField, Tools} from 'react-sketch';\nimport { ethers } from \"ethers\";\n\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Navigation from \"./Components/Navigation\";\nimport Gallery from \"./Pages/Gallery\";\nimport About from \"./Pages/About\";\nimport View from \"./Pages/View\";\nimport NotFound from './Pages/NotFound';\n\nimport eyes from './Assets/eyes.png';\nimport shades from './Assets/shades.png';\nimport doge from './Assets/doge.png';\nimport joint from './Assets/joint.png';\nimport troll from './Assets/troll.png';\n\nimport sample1 from './Assets/sample-1.png';\nimport sample2 from './Assets/sample-2.jpg';\nimport sample3 from './Assets/sample-3.jpg';\nimport sample4 from './Assets/sample-4.png';\n\nconst fabric = require(\"fabric\").fabric;\n\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\n// const provider = new ethers.providers.InfuraProvider();\n\nlet l1Provider, l1Signer, l2Signer;\nlet walletDetected = !!window.ethereum;\n\ntry {\n  if (window.ethereum) {\n    window.ethereum.enable().then(l1Provider = new ethers.providers.Web3Provider(window.ethereum));\n    l1Signer = l1Provider.getSigner();\n  } else {\n    l1Provider = ethers.getDefaultProvider('kovan');\n  }\n    \n} catch (err) {\n  console.log(err);\n}\n\nconst abi = [\n  \"function totalSupply() view returns (uint)\",\n  \"function tokenByIndex(uint) view returns (uint)\",\n  \"function tokenURI(uint) view returns (string)\",\n  \"function mint(address, string) returns (uint)\"\n];\n\nconst StyledSketchField = styled(SketchField)`\n  margin-top: 1rem;\n  box-shadow:\n    0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n    0 12.5px 10px rgba(0, 0, 0, 0.06),\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n    0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n    0 100px 80px rgba(0, 0, 0, 0.12);\n  background-color: #e8e8e8;\n`;\n\nconst StyledTextBox = styled.input`\n  width: 100%;\n  font-size: 1.6rem;\n  border: solid 1px #c1b6b6;\n  border-radius: 1rem;\n  padding: 0.4rem 0.8rem;\n  margin-bottom: 0.2rem;\n  font-family: 'courier';\n`;\n\nconst StyledButton = styled.button`\n  cursor: pointer;\n  margin: 0.6rem 0.4rem;\n  border-radius: 1rem;\n  border: 0;\n  padding: 0.6rem 1.4rem;\n  font-size: 2rem;\n  font-family: 'courier';\n  box-shadow:\n    0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n    0 12.5px 10px rgba(0, 0, 0, 0.06),\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n    0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n    0 100px 80px rgba(0, 0, 0, 0.12);\n\n  :hover {\n    background-color: orange;\n    color: white;\n  }\n`;\n\nconst MemeButton = styled.button`\n  cursor: pointer;\n  margin: 1rem 0.1rem 1rem 0.1rem;\n  border: 0;\n  border-radius: 0.4rem;\n  padding: 0.4rem 1rem;\n  font-size: 1rem;\n  font-family: 'courier';\n  box-shadow:\n    0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n    0 12.5px 10px rgba(0, 0, 0, 0.06),\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n    0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n    0 100px 80px rgba(0, 0, 0, 0.12);\n\n  :hover {\n    background-color: orange;\n    color: white;\n  }\n`;\n\nconst ThumbImg = styled.img`\n  border-radius: 1rem;\n  width: 6rem;\n  padding: 0.2rem;\n  cursor: pointer;\n`;\n\nfunction App() {\n  const [imageCID, setImageCID] = useState('');\n  const [metadataCID, setMetadataCID] = useState('');\n  const [tool, setTool] = useState(Tools.Select);\n  const [mintStatus, setMintStatus] = useState(false);\n  const [mintModal, setMintModal] = useState(false);\n  const [loadModal, setLoadModal] = useState(false);\n  const [saveModal, setSaveModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [isValidL1, setIsValidL1] = useState();\n\n  const contract = new ethers.Contract(\"0xe41eE07A9F41CD1Ab4e7F25A93321ba1Dc0Ec5b0\", abi, l1Signer || l1Provider);\n\n  const checkNetworks = async () => {\n    if (l1Provider) {\n      const network = await l1Provider.getNetwork();\n      if ([42, 1337].includes(network.chainId)) {\n        setIsValidL1(true)\n      }\n    } else {\n      setIsValidL1(false)\n    }\n\n  }\n\n  const _sketch = useRef();\n\n  const thugify = () => {\n    _sketch.current.addImg(shades)\n    _sketch.current.addImg(joint)\n  }\n\n  const dogeify = () => {\n    _sketch.current.addImg(doge)\n  }\n\n  const laserify = () => {\n    _sketch.current.addImg(eyes)\n  }\n\n  const trollify = () => {\n    _sketch.current.addImg(troll)\n  }\n\n  const select = () => {\n    setTool(Tools.Select)\n  }\n\n  const pen = () => {\n    setTool(Tools.Pencil)\n  }\n\n  const text = async () => {\n    _sketch.current.addText('SCALING FTW', {\n      \"fontFamily\": \"Impact\",\n      \"fill\": \"#fff\",\n      \"stroke\": \"#000\",\n      \"strokeWidth\": \"1\"\n    });\n    setTool(Tools.Select)\n  }\n\n  const remove = async () => {\n    _sketch.current.removeSelected();\n  }\n\n  const toggleLoadModal = () => {\n    if (loadModal) {\n      setLoadModal(false)\n    } else {\n      setLoadModal(true)\n    }\n  }\n\n  const load = async (url) => {    \n\n    const response = await axios.get(url, { responseType: 'blob' }); \n    const reader = new FileReader();\n    reader.readAsDataURL(response.data); \n    reader.onload = async () => {\n      fabric.Image.fromURL(reader.result, function(oImg) {\n        oImg.scaleToWidth(640);\n        _sketch.current.setBackgroundFromDataUrl(oImg.toDataURL(), {\n            stretched: true,\n            originX: \"left\",\n            originY: \"top\",\n          }); \n      });\n    }\n\n    setLoadModal(false)\n\n  }\n\n  const toggleSaveModal = () => {\n    if (saveModal) {\n      setSaveModal(false)\n    } else {\n      setSaveModal(true)\n    }\n  }\n\n  const save = async () => {\n    toggleSaveModal()\n  }\n\n  const actuallySave = async () => {\n    const reader = new FileReader()\n    reader.onloadend = async function () {\n      const fileContents = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\"><image width=\"100%\" height=\"100%\" href=\"${reader.result}\" /></svg>`;\n      const ipfsImg = await ipfs.add(fileContents);\n      setImageCID(ipfsImg);\n\n      // TODO - load the title / description from fields (prepopulate from what's loaded)\n      const metadata = `{ \"name\":\"${title}\", \"description\":\"${description}\",\"image\":\"ipfs://${ipfsImg}\" }`\n\n      const ipfsMetadata = await ipfs.add(metadata);\n      setMetadataCID(ipfsMetadata);\n\n    }\n    const canvas = _sketch.current.toDataURL();\n    const blob = await (await fetch(canvas)).blob();\n    reader.readAsDataURL(blob);\n  }\n\n  const mintNFT = async () => {\n    setMintStatus('minting...')\n    const address = await l1Signer.getAddress();\n    const tx = await contract.mint(address, metadataCID);\n    setMintStatus('transaction sent!');\n    await tx.wait();\n    setMintStatus('minted! head to the gallery to check it out');\n  }\n\n  const mint = () => {\n    if (mintModal) {\n      setMintModal(false)\n    } else {\n      setMintModal(true)\n    }\n  }\n\n  useEffect(() => {\n    checkNetworks()\n  },[])\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <div className=\"App\">\n          <Navigation />\n          { \n            !isValidL1 ? (<div>unable to detect valid network</div>) : <></>\n          }\n          <header className=\"App-header\">\n            <div>\n              <StyledButton onClick={() => toggleLoadModal()}>load</StyledButton>\n              <span>&gt;</span>\n              <StyledButton onClick={() => save()}>save</StyledButton>\n              <span>&gt;</span>\n              <StyledButton onClick={() => mint()}>mint</StyledButton>\n            </div>\n            <div>\n              <MemeButton onClick={() => dogeify()}>dogeify</MemeButton>\n              <MemeButton onClick={() => laserify()}>laserify</MemeButton>\n              <MemeButton onClick={() => trollify()}>trollify</MemeButton>\n              <MemeButton onClick={() => thugify()}>thugify</MemeButton>\n              <MemeButton onClick={() => text()}>textify</MemeButton>\n              &nbsp;&nbsp;\n              <MemeButton onClick={() => select()}>select</MemeButton>\n              <MemeButton onClick={() => pen()}>pen</MemeButton>\n              <MemeButton onClick={() => remove()}>remove</MemeButton>\n            </div>\n            <StyledSketchField \n              width='640px' \n              height='640px' \n              tool={tool} \n              lineColor='black'\n              lineWidth={3}\n              ref={(c) => { _sketch.current = c }}\n              name='sketch'\n              />\n          </header>\n\n          <div className={`modal ${ loadModal ? 'is-active' : ''}`}>\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-content\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">load</p>\n              <button className=\"delete\" aria-label=\"close\" onClick={()=> toggleLoadModal() }></button>\n            </header>\n            <section className=\"modal-card-body\">\n              <h2>load a sample nft asset...</h2>\n              <ThumbImg src={sample1} onClick={() => load('https://bafybeibhg2ik63dnkb3el4nlh5qry3lnhfok3nh3csywi6joedv25kh77i.ipfs.dweb.link/image.png')}  />\n              <ThumbImg src={sample2} onClick={() => load('https://bafybeid5o4fkfgq62uvzuh24sgoo6jj2nir7ggk4o5rhwqb4sfr4wgbfku.ipfs.dweb.link/nft.jpg')} />\n              <ThumbImg src={sample3} onClick={() => load('https://bafybeieyl2r3uorgpotq76p6w2dbpxl3m2qablgkjawyzn5htdzudb5s4y.ipfs.dweb.link/nft.jpg')} />\n              <ThumbImg src={sample4} onClick={() => load('https://ipfs.io/ipfs/Qme9DzDKpwoY5JGXs6d9YwPrN5u6VbSgf31LC2YNfUX5hu/nft.png')} />\n             \n              {/* <hr />\n              <h2>load from an existing NFT...</h2>\n              <div>\n                <MemeButton onClick={() => load()}>load from contract</MemeButton>\n              </div> */}\n            </section>\n            <footer className=\"modal-card-foot\">\n            </footer>\n            </div>\n          </div>\n\n          <div className={`modal ${ saveModal ? 'is-active' : ''}`}>\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-content\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">save</p>\n              <button className=\"delete\" aria-label=\"close\" onClick={()=> toggleSaveModal() }></button>\n            </header>\n            <section className=\"modal-card-body\">\n              <StyledTextBox value={title} placeholder={`nft name`} onChange={(e) => setTitle(e.currentTarget.value)} />\n              <br />\n              <StyledTextBox value={description} placeholder={`nft description`} onChange={(e) => setDescription(e.currentTarget.value)} />\n              <br />\n              <MemeButton onClick={() => actuallySave()}>save to ipfs</MemeButton>\n              <hr />\n              <p>Image CID: <a href={`ipfs://${imageCID}`} target=\"_blank\">{`ipfs://${imageCID}`}</a></p>\n              <p>Metadata CID: <a href={`ipfs://${metadataCID}`} target=\"_blank\">{`ipfs://${metadataCID}`}</a></p>\n              <p>{ metadataCID ? `done! you're now ready to mint!` : ``}</p>\n              <hr />\n              <p>once your assets have been saved, we recommend preserving</p>\n              <MemeButton>preserve with filecoin</MemeButton>\n              &nbsp;\n              <MemeButton>preserve with pinanta</MemeButton>\n            </section>\n            <footer className=\"modal-card-foot\">\n            </footer>\n            </div>\n          </div>\n\n          <div className={`modal ${ mintModal ? 'is-active' : ''}`}>\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-content\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">mint</p>\n              <button className=\"delete\" aria-label=\"close\" onClick={()=>mint()}></button>\n            </header>\n            <section className=\"modal-card-body\">\n              <p>mint directly to layer 1 (more expensive / immediately usable)</p>\n              <MemeButton onClick={()=>mintNFT()}>mint to L1</MemeButton>\n              <p>{mintStatus}</p>\n              {/* <hr />\n              <p>mint to layer 2 (significant cheaper / delay in usability)</p>\n              <MemeButton onClick={()=>mintNFT()}>mint to arbitrum</MemeButton> */}\n            </section>\n            <footer className=\"modal-card-foot\">\n            </footer>\n            </div>\n          </div>\n\n        </div>\n      </Route>\n      <Route path=\"/gallery\">\n        <div className=\"App\">\n          <Navigation />\n          <Gallery contract={contract} walletDetected={walletDetected} />\n        </div>\n      </Route>\n      <Route path=\"/about\">\n        <div className=\"App\">\n          <Navigation />\n          <About />\n        </div>\n      </Route>\n      <Route path=\"/v/:id\">\n        <div className=\"App\">\n          <Navigation />\n          <View contract={contract} walletDetected={walletDetected} />\n        </div>\n      </Route>\n      <Route component={NotFound}>\n        <div className=\"App\">\n          <Navigation />\n          <NotFound />\n        </div>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/troll.b677baa7.png\";","import { useState } from \"react\";\n\nimport { Navbar, Section } from 'react-bulma-components';\nimport styled from 'styled-components';\n\nimport troll from \"../Assets/troll.png\"\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst StyledLink = styled(Link)`\n  color: #4a4a4a;\n`;\n\nconst Navigation = () => {\n  const [navIsActive, setNavIsActive] = useState(false);\n\n  return (\n      <Navbar\n        active={navIsActive}\n        transparent={true}\n        style={{background: \"none\"}}\n      >\n        <Navbar.Brand>\n          <Navbar.Item renderAs=\"span\">\n            <Link to=\"/\">\n              <img src={troll} alt=\"Flaunt\" />\n            </Link>\n          </Navbar.Item>\n          <Navbar.Burger onClick={() => setNavIsActive(navIsActive ? false : true) }/>\n        </Navbar.Brand>\n        <Navbar.Menu>\n          <Navbar.Container>\n            <Navbar.Item renderAs=\"span\">\n              <StyledLink to=\"/\">\n                home\n              </StyledLink>\n            </Navbar.Item>\n            <Navbar.Item renderAs=\"span\">\n              <StyledLink to=\"/gallery\">\n                gallery\n              </StyledLink>\n            </Navbar.Item>\n            <Navbar.Item renderAs=\"span\">\n              <StyledLink to=\"/about\">\n                about\n              </StyledLink>\n            </Navbar.Item>\n          </Navbar.Container>\n        </Navbar.Menu>\n      </Navbar>\n  );\n};\n\nexport default Navigation;","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { Button  } from 'react-bulma-components';\n\nconst Gallery = ({contract, walletDetected}) => {\n  const [assets, setAssets] = useState([])\n  const [totalSupply, setTotalSupply] = useState(0)\n\n  const load = async () => {\n    console.log(contract)\n    const totalSupplyNum = (await contract.totalSupply()).toNumber();\n\n    setTotalSupply(totalSupplyNum)\n\n    const items = [...Array(totalSupplyNum)].map(async (_, i) => {\n      const id = i+1;\n      const item = await contract.tokenURI(id)\n\n      // const metata = await fetch(item);\n\n      const newItem = (\n        <li key={i}>\n          <Link to={`/v/${id}`}>\n            {`${item} (${id})`}\n          </Link>\n        </li>\n      );\n\n      setAssets((prev) => {\n        return [...prev, newItem];\n      });\n    });\n  }\n\n  useEffect(() => {\n    // if (walletDetected) {\n      load()\n    // }\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <h2>Gallery</h2>\n      <header className=\"App-header\">\n        <p>all the meme-ified goodness ({totalSupply})</p>\n        <ul>\n          {assets}\n        </ul>\n      </header>\n    </div>\n  )\n};\n\nexport default Gallery;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Button  } from 'react-bulma-components';\n\nconst About = ({contract}) => {\n  \n  return (\n    <div className=\"App\">\n      <h2>About</h2>\n      <header className=\"App-header\">\n        <h1>meme-ify your NFTs</h1>\n        <p>generate derivative assets (new NFTs) from items you already own</p>\n      </header>\n    </div>\n  )\n};\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\n\nimport { ReactSVG } from 'react-svg'\nimport styled from 'styled-components';\n\nimport {\n  useParams\n} from \"react-router-dom\";\n\nimport { Button  } from 'react-bulma-components';\n\nconst StyledSVG = styled(ReactSVG)`\n  width: 60vh;\n  height: 60vh;\n  margin-bottom: 1rem;\n  box-shadow:\n    0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n    0 12.5px 10px rgba(0, 0, 0, 0.06),\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n    0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n    0 100px 80px rgba(0, 0, 0, 0.12);\n  background-color: #e8e8e8;\n`;\n\nconst Title = styled.h2`\n  font-weight: bold;\n  font-size: 2rem;\n`;\n\nconst ipfsClient = require(\"ipfs-http-client\");\n\nconst Gallery = ({contract, walletDetected}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [svg, setSvg] = useState();\n\n  const { id } = useParams()\n\n  const sanitize = (url) => {\n    const cidV0 = url.replace('/ipfs', '').replace('ipfs://', '');\n    const cidV1 = new ipfsClient.CID(cidV0).toV1();\n    return `https://${cidV1}.ipfs.dweb.link/`;\n  }\n\n  const load = async () => {\n    \n    const metadataUri = await contract.tokenURI(id)\n\n    console.log(metadataUri)\n\n    const santizedMetadataUri = sanitize(metadataUri)\n    const res = await fetch(santizedMetadataUri);\n    const metadata = await res.json();\n\n    const santizedSvgUri = sanitize(metadata.image)\n\n    setSvg(santizedSvgUri)\n    setTitle(metadata.name)\n    setDescription(metadata.description)\n  }\n\n  useEffect(() => {\n    // if (walletDetected) {\n      load()\n    // }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {\n          svg === undefined ?\n          (`loading`) : <StyledSVG src={svg} wrapper=\"span\" />\n        }\n        <Title>{title}</Title>\n        <div>{description}</div>\n      </header>\n    </div>\n  )\n};\n\nexport default Gallery;\n","import React from \"react\";\n\nconst NotFound = ({contract}) => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>not found 😕</h1>\n      </header>\n    </div>\n  )\n};\n\nexport default NotFound;\n","export default __webpack_public_path__ + \"static/media/eyes.81ad596d.png\";","export default __webpack_public_path__ + \"static/media/shades.3530aa03.png\";","export default __webpack_public_path__ + \"static/media/doge.c79b108e.png\";","export default __webpack_public_path__ + \"static/media/joint.2da67bea.png\";","export default __webpack_public_path__ + \"static/media/sample-1.1e6f802a.png\";","export default __webpack_public_path__ + \"static/media/sample-2.e854d957.jpg\";","export default __webpack_public_path__ + \"static/media/sample-3.942cb87b.jpg\";","export default __webpack_public_path__ + \"static/media/sample-4.81671ddb.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}